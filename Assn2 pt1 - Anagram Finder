/* Directions: Create a class called Anagram. In the class, define a static method called getAnagrams that accepts a string
 * (without spaces or punctuation) and returns an array of strings. The array should consist of valid anagrams and no duplicates
 */

package assn2;

import stdlib.In;
import week2.BagOWords;

public class Anagram {
   private static BagOWords wordlist = new BagOWords();
   private static String[] dictionary;
   private static String searchKey;

   public static String[] getAnagrams(String letters){
      importdictionary();
      searchKey = letters;
      getAnagrams(letters, "");
      return wordlist.getWords();
   }

   private static void getAnagrams(String letters, String start){
      if (letters.length() == 0) {
         if ((!searchKey.equals(start)) && findword(start) == true){
            wordlist.addWord(start);
         }
      } 
      for (int i = 0; i < letters.length(); i++){
         getAnagrams(letters.substring(0, i) + letters.substring(i + 1, letters.length()),start + letters.charAt(i));
      }
   }

   public static void importdictionary(){
      In fstream = new In("http://www-01.sil.org/linguistics/wordlists/english/wordlist/wordsEn.txt");
      dictionary = fstream.readAllStrings();
   }

   public static boolean findword(String permutation){
      int lo = 0;
      int hi = dictionary.length-1;
      int mid;

      while (lo <= hi){
         mid = (lo + hi)/ 2;
         if (permutation.compareTo(dictionary[mid]) < 0){
            hi = mid -1;
         }
         else if(permutation.compareTo(dictionary[mid]) > 0){
            lo = mid + 1;
         }
         else if(permutation.equals(dictionary[mid])){
            return true;
         }
      }
      return false; 
   }

   public static void main(String[] args){
   // use for testing code
      String[] results = getAnagrams("reductions");
      int i = 0;
      while (i < results.length){
         System.out.println(results[i]);
         i++;
      }
   }

}
